describe: "macros" as: {
  describe: "unique name generation" as: {
    it: "creates names via #names" so: {
      macro (x m-foo-1) names { x | `'~x }
      var-1 = 1 m-foo-1
      var-2 = 2 m-foo-1
      var-1 should-be: var-1
      var-1 should: { != var-2 }
    }

    it: "decorates through block patterns" so: {
      macro (x m-foo-2) names { x | `'{ ~x | 1 } }
      var-1 = 1 m-foo-2
      var-1 should-be: var-1
      1 m-foo-2 should: { != 2 m-foo-2 }
    }

    it: "decorates through definition patterns" so: {
      macro (x m-foo-3) names { x | `'(foo(~x) := 1) }
      var-1 = 1 m-foo-3
      var-1 should-be: var-1
      1 m-foo-3 should: { != 2 m-foo-3 }
    }
  }

  describe: "line information" as: {
    it: "is provided during macroexpansion via #line" so: {
      macro (a m-foo-4) line
      1 m-foo-4 should-be: __LINE__
      2 m-foo-4 should-be: __LINE__
    }

    it: "retains the original line through multiple expansions" so: {
      macro (a m-foo-5) line
      macro (a m-foo-6) `(~a m-foo-5)
      1 m-foo-6 should-be: __LINE__
    }
  }
}

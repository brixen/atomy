macro(in-namespace(n, &b)):
  names (res):
    `(let(namespace = Atomy::Namespace ensure(#~n)):
        evaluate-when(compile):
          Atomy::STATE at(#st) put(Atomy::Namespace get)
          Atomy::Namespace ensure(#~n)

        ~res = ~(b body)

        evaluate-when(compile):
          Atomy::Namespace set(Atomy::STATE fetch(#st))

        ~res)

macro(no-namespace(&b)):
  names (res):
    `(let(namespace = nil):
        evaluate-when(compile):
          Atomy::STATE at(#st) put(Atomy::Namespace get)
          Atomy::Namespace set(nil)

        ~res = ~(b body)

        evaluate-when(compile):
          Atomy::Namespace set(Atomy::STATE fetch(#st))

        ~res)

macro(use(*ns)):
  `{ ~*(ns collect (n): `(Atomy::Namespace get use(#~n)))
   } body

namespace(atomy)

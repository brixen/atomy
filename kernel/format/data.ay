use("core")
use("define")
use("array")
use("control-flow")
use("node")
use("cosmetics")
use("particles")

Atomy Format open:
  ast:
    Segment:
      Chunk([.flags], @text)
      String([.flags])
      Decimal([.flags])
      Hex([.flags])
      Octal([.flags])
      Binary([.flags])
      Radix([.flags])
      Float([.flags])
      Exponent([.flags])
      General([.flags])
      Character([.flags])
      Any([.flags])
      Pluralize(.singular, [.flags], .plural?)
      Lowercase(.content, [.flags])
      Capitalize(.content, [.flags])
      Uppercase(.content, [.flags])
      Justify([.segments], [.flags])
      Skip([.flags])
      Indirection([.flags])
      Iterate(.content, [.flags])
      Break([.flags])
      Conditional([.branches], [.flags], .default?)

    Flag:
      Number(@value?)
      Symbol(@character)
      ZeroPad
      Precision(@value)

    Formatter([.segments])

  Segment symbol(m)? :=
    @flags any? [f]:
      f match:
        Symbol -> f character == m
        _ -> false

  Segment precision :=
    @flags find .is-a(Precision)? ?value()

  Segment zero-pad? :=
    @flags any? [f]:
      f match:
        ZeroPad -> true
        _ -> false

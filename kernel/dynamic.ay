Atomy::DYNAMIC_ROOTS = Hash new

for-macro:
  key(n) :=
    Atomy::AST::Variable new $:
      n line
      "atomy_" + n message-name

  dynvar(x) :=
    `(Thread current [#~key(x)] || Atomy::DYNAMIC_ROOTS [#~x])

  set-dynvar(n, v) :=
    `(Thread current [#~key(n)] = ~v)

macro(dynamic(~n, ~root)):
  `(Atomy::DYNAMIC_ROOTS [#~n] = ~root)

syntax(^x): dynvar(x)

macro(let(~*bindings) { ~*body }):
  tmps = bindings zip(names(bindings size))

  save =
    `(~tmp = ~dynvar(n))
      for([`(~n = ~_), tmp]) in(tmps)

  set =
    set-dynvar(n, v) for(`(~n = ~v)) in(bindings)

  restore =
    set-dynvar(n, tmp) for([`(~n = ~_), tmp]) in(tmps)

  `(do:
      ~*save
      { ~*set
        ~*body
      } ensuring: ~*restore)

require("actor")

me := Actor current

Actor <- v := send(v)

macro (receive(&body)) names (e):
  bs = body contents collect (`(~pat -> ~exp)):
    `(~e when(~(pat to-pattern)) (~pat): ~exp)

  branches = Atomo::AST::Block new(line, bs, [e])

  `(Actor receive(&(~branches)))

macro (receive(&body) after(&timeout)) do:
  bs = body contents collect (`(~pat -> ~body)):
    `(e when(~(pat to-pattern)) (~pat): ~body)

  bs << `(e after(~(timeout lhs)): ~(timeout rhs))

  branches = Atomo::AST::Block new(line, bs, ['e])

  `(Actor receive(&~branches))

spawn(&action) := Actor spawn(&action)

spawn-link(&action) := Actor spawn(&action)

class(And < Atomy::AST::Node):
  children(#a, #b)
  generate

  bytecode(g) := do:
    pos(g)
    done = g new-label
    no = g new-label

    @a bytecode(g)
    g dup
    g gif(done)

    g pop
    @b bytecode(g)

    done set!

class(Or < Atomy::AST::Node):
  children(#a, #b)
  generate

  bytecode(g) := do:
    pos(g)
    done = g new-label

    @a bytecode(g)
    g dup
    g git(done)

    g pop
    @b bytecode(g)

    done set!

class(Negate < Atomy::AST::Node):
  children(#expression)
  generate

  bytecode(g) := do:
    pos(g)
    done = g new-label
    yes = g new-label

    @expression bytecode(g)
    g git(yes)

    g push-true
    g goto(done)

    yes set!
    g push-false

    done set!

macro (a && b) And new(line, a, b)
macro (a || b) Or new(line, a, b)
macro (!a) Negate new(line, a)
macro (a != b) `!(~a == ~b)
macro (a !~ b) `!(~a =~ ~b)

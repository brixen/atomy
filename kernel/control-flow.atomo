macro (if: cond then: yes else: no)
  Atomo::AST::IfThenElse new(cond line, cond, yes, no)

macro (while: cond do: body)
  Atomo::AST::While new(cond line, cond, `(~body call))

macro (while(cond, &body))
  Atomo::AST::While new(cond line, cond, `(~body call))

macro (x return(y))
  Atomo::AST::Return new(x line, y)

macro (x rescue: y)
  Atomo::AST::Catch new(x line, `(~x call), `(~y call($exception)))

macro (x rescue: y else: z)
  Atomo::AST::Catch new(x line, `(~x call), `(~y call($exception)), z body)

macro (x ensuring: y)
  Atomo::AST::Ensure new(x line, `(~x call), `(~y call))

unless(false, &blk) := blk call
unless(true, &_) := nil

when(true, &blk) := blk call
when(false, &_) := nil

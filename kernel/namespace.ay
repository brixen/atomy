require("delegate")

class(AtomyDelegator < SimpleDelegator):
  define(method-missing(m, *args, &block)):
    target = self _-getobj--
    { if(target respond-to?(m, true))
        then: target _-send--(m, *args, &block)
        else: super(m, *args, &block)
    } ensuring:
      when($"@"):
        $"@" delete-if [t]:
          r"\A#{Regexp quote(_FILE)}:#{_LINE - 2}:" =~ t


macro(namespace: ~*body):
  `(Module new:
      Self = self

      ~*body

      class(Provider < AtomyDelegator):
        include(Self))

macro(namespace(~name): ~*body):
  `(module(~name):
      ~*body

      class(Provider < AtomyDelegator):
        include(~name)
        
      ~name)

macro(using(~name) ~body):
  `(with-variables-of(self):
      ~body block call-on-instance(~name const-get(#Provider) new(self)))

macro(~body where: ~*helpers):
  `(using(namespace: ~*helpers) ~body)
